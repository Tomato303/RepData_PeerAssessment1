data_set6 <- read.csv("C:\\R files folder\\5.csv",header = TRUE, sep = ",", quote="\"",dec=".")
linmod <- lm(favourability~ ., data = data_set6)
metrics6 <- calc.relimp(linmod, type = c("lmg"))
data_set7 <- read.csv("C:\\R files folder\\6.csv",header = TRUE, sep = ",", quote="\"",dec=".")
linmod <- lm(favourability~ ., data = data_set7)
metrics7 <- calc.relimp(linmod, type = c("lmg"))
data_set8 <- read.csv("C:\\R files folder\\7.csv",header = TRUE, sep = ",", quote="\"",dec=".")
linmod <- lm(favourability~ ., data = data_set8)
metrics8 <- calc.relimp(linmod, type = c("lmg"))
data_set9 <- read.csv("C:\\R files folder\\8.csv",header = TRUE, sep = ",", quote="\"",dec=".")
linmod <- lm(qfavourability~ ., data = data_set9)
metrics9 <- calc.relimp(linmod, type = c("lmg"))
data_set1 <- read.csv("C:\\R files folder\\Total.csv",header = TRUE, sep = ",", quote="\"",dec=".")
linmod <- lm(Favourability~ ., data = data_set1)
metrics1 <- calc.relimp(linmod, type = c("lmg"))
data_set2 <- read.csv("C:\\R files folder\\1.csv",header = TRUE, sep = ",", quote="\"",dec=".")
linmod <- lm(Favourability~ ., data = data_set2)
metrics2 <- calc.relimp(linmod, type = c("lmg"))
data_set3 <- read.csv("C:\\R files folder\\2.csv",header = TRUE, sep = ",", quote="\"",dec=".")
linmod <- lm(Favourability~ ., data = data_set3)
metrics3 <- calc.relimp(linmod, type = c("lmg"))
data_set4 <- read.csv("C:\\R files folder\\3.csv",header = TRUE, sep = ",", quote="\"",dec=".")
linmod <- lm(Favourability~ ., data = data_set4)
metrics4 <- calc.relimp(linmod, type = c("lmg"))
data_set5 <- read.csv("C:\\R files folder\\4.csv",header = TRUE, sep = ",", quote="\"",dec=".")
linmod <- lm(Favourability~ ., data = data_set5)
metrics5 <- calc.relimp(linmod, type = c("lmg"))
data_set6 <- read.csv("C:\\R files folder\\5.csv",header = TRUE, sep = ",", quote="\"",dec=".")
linmod <- lm(Favourability~ ., data = data_set6)
metrics6 <- calc.relimp(linmod, type = c("lmg"))
data_set7 <- read.csv("C:\\R files folder\\6.csv",header = TRUE, sep = ",", quote="\"",dec=".")
linmod <- lm(Favourability~ ., data = data_set7)
metrics7 <- calc.relimp(linmod, type = c("lmg"))
data_set8 <- read.csv("C:\\R files folder\\7.csv",header = TRUE, sep = ",", quote="\"",dec=".")
linmod <- lm(Favourability~ ., data = data_set8)
metrics8 <- calc.relimp(linmod, type = c("lmg"))
data_set9 <- read.csv("C:\\R files folder\\8.csv",header = TRUE, sep = ",", quote="\"",dec=".")
linmod <- lm(Favourability~ ., data = data_set9)
metrics9 <- calc.relimp(linmod, type = c("lmg"))
Summary <- cbind(metrics1$lmg, metrics2$lmg, metrics3$lmg, metrics4$lmg, metrics5$lmg, metrics6$lmg, metrics7$lmg
, metrics8$lmg, metrics9$lmg)
Summary
getwd()
data_set1 <- read.csv("~/Coursera_tom/Fixed Modelling/FixedNPSv2.csv", header = TRUE, sep = ",", quote="\"", dec=".")
linmod <- lm(x0~ ., data = data_set1)
metrics1 <- calc.relimp(linmod, type = c("lmg"))
data_set1 <- read.csv("~/Coursera_tom/Fixed Modelling/FixedNPSv2.csv", header = TRUE, sep = ",", quote="\"", dec=".")
linmod <- lm(X0~ ., data = data_set1)
metrics1 <- calc.relimp(linmod, type = c("lmg"))
metrics1
data_set1 <- read.csv("~/Coursera_tom/Fixed Modelling/Dependents.csv", header = TRUE, sep = ",", quote="\"", dec=".")
linmod <- lm(nps01_1~ ., data = data_set1)
metrics1 <- calc.relimp(linmod, type = c("lmg"))
metrics1
data_set3 <- read.csv("~/Coursera_tom/Fixed Modelling/Model 1.csv", header = TRUE, sep = ",", quote="\"", dec=".")
linmod <- lm(X0~ ., data = data_set3)
metrics3 <- calc.relimp(linmod, type = c("lmg"))
data_set4 <- read.csv("~/Coursera_tom/Fixed Modelling/Model 2.csv", header = TRUE, sep = ",", quote="\"", dec=".")
linmod <- lm(X0~ ., data = data_set4)
metrics4 <- calc.relimp(linmod, type = c("lmg"))
data_set3 <- read.csv("~/Coursera_tom/Fixed Modelling/Model 1.csv", header = TRUE, sep = ",", quote="\"", dec=".")
linmod <- lm(X0~ ., data = data_set3)
metrics3 <- calc.relimp(linmod, type = c("lmg"))
data_set3 <- read.csv("~/Coursera_tom/Fixed Modelling/Model 1.csv", header = TRUE, sep = ",", quote="\"", dec=".")
linmod <- lm(X0~ ., data = data_set3)
metrics3 <- calc.relimp(linmod, type = c("lmg"))
data_set4 <- read.csv("~/Coursera_tom/Fixed Modelling/Model 2.csv", header = TRUE, sep = ",", quote="\"", dec=".")
linmod <- lm(X0~ ., data = data_set4)
metrics4 <- calc.relimp(linmod, type = c("lmg"))
metrics3
metrics4
data_set5 <- read.csv("I:/Analytics/2016 Analytics Jobs/Vodafone/BB Dip/Datafiles/SV/Model 3.csv", header = TRUE, sep = ",", quote="\"", dec=".")
linmod <- lm(X0~ ., data = data_set5)
metrics5 <- calc.relimp(linmod, type = c("lmg"))
data_set5 <- read.csv("I:/Analytics/2016 Analytics Jobs/Vodafone/BB Dip/Datafiles/SV/Model 3.csv", header = TRUE, sep = ",", quote="\"", dec=".")
linmod <- lm(fb01_1~ ., data = data_set5)
metrics5 <- calc.relimp(linmod, type = c("lmg"))
metrics5
data_set6 <- read.csv("I:/Analytics/2016 Analytics Jobs/Vodafone/BB Dip/Datafiles/SV/Model 4.csv", header = TRUE, sep = ",", quote="\"", dec=".")
linmod <- lm(fb01_1~ ., data = data_set6)
metrics6 <- calc.relimp(linmod, type = c("lmg"))
data_set7 <- read.csv("I:/Analytics/2016 Analytics Jobs/Vodafone/BB Dip/Datafiles/SV/Model 5.csv", header = TRUE, sep = ",", quote="\"", dec=".")
linmod <- lm(nps01_1~ ., data = data_set7)
metrics7 <- calc.relimp(linmod, type = c("lmg"))
metrics6
metrics7
install.packages("ordinal")
library(ordinal)
dataset4 <- read.csv("C:\\R Files Folder\\Model_4.csv", header = TRUE, sep = ",", quote="\"", dec=".")
cumlog4 <- clm(as.factor(NPSv2) ~ BB_Performance + Bill_Transparency + Resolution + Service + Simplicity, data=dataset4)
summary(cumlog4)
install(ordinal)
install.packages("ordinal")
library(ordinal)
#Model 6
dataset6 <- read.csv("C:\\R Files Folder\\Model_6.csv", header = TRUE, sep = ",", quote="\"", dec=".")
cumlog6 <- clm(as.factor(BB_Satv2) ~ BB_Performance + Bill_Transparency + Resolution + Service + Simplicity, data=dataset6)
summary(cumlog6)
#Model 7
dataset7 <- read.csv("C:\\R Files Folder\\Model_7.csv", header = TRUE, sep = ",", quote="\"", dec=".")
cumlog7 <- clm(as.factor(NPSv2) ~ BB_Performance + Bill_Transparency + Resolution + Service + Simplicity, data=dataset7)
summary(cumlog7)
#Model 8
dataset8 <- read.csv("C:\\R Files Folder\\Model_8.csv", header = TRUE, sep = ",", quote="\"", dec=".")
cumlog8 <- clm(as.factor(NPSv2) ~ BB_Performance + Bill_Transparency + Resolution + Service + Simplicity, data=dataset8)
summary(cumlog8)
#Model 9
dataset9 <- read.csv("C:\\R Files Folder\\Model_9.csv", header = TRUE, sep = ",", quote="\"", dec=".")
cumlog9 <- clm(as.factor(NPSv2) ~ BB_Performance + Bill_Transparency + Resolution + Service + Simplicity, data=dataset9)
summary(cumlog9)
library("swirl")
ls~()
ls()
rm(list=ls())
swirl()
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count()))
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quartile(pack_sum$unique, probs = 0.99)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(results3)
View(result3)
submit()
submit()
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?seperate
?separate
separate(res, sex_class, c("sex", "class"))
submit()
students
students3
submit()
submit()
?spread
submit()
submit()
library(readr)
parse_number("class5")
submit()
students4
submit()
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
bind_rows(passed, failed, id = name)
?bind_rows
bind_rows(passed, failed)
sat
?select
?separate
submit()
submit()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
month()
month(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd-hms(dt1)
ymd-hms("dt1")
ymd_hms("dt1")
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 14, minutes = 10)
this_moment
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
deaprt
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz("Asia/Hong_Kong")
arrive <- with_tz(arrive, "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?interval
how_long <- interval(last_time, arrive)
as.period(how_long)
stopwatch()
install.packages("lattice")
install.packages("plyr")
load("~/Coursera_tom/Exploratory_Analysis/Week 3/.RData")
swirl()
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
diag %*% matu %*% t(matv)
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- (svd1$u[,1] * svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
load("~/Coursera_tom/Exploratory_Analysis/Week 3/.RData")
setwd("~/")
getwd()
set.seed(1234)
par(mar = c(0,0,0,0))
x <- rnorm(12, mean = rep(1:3, each = 4), sd = 0.2)
y <- rnorm(12, mean = rep(c(1,2,1), each = 4), sd = 0.2)
plot(x, y, col = "blue", pch = 19, cex = 2)
text(x + 0.05, y = 0.05, labels = as.character(1:12))
dataFrame <- data.frame(x = x, y = y)
distxy <- dist(dataFrame)
hClustering <- hclust(distxy)
plot(hClustering)
myplclust <- function(hclust, lab = hclust$labels, lab.col = rep(1,length(hclust$labels)), hang = 0.1, ...) {
y <- rep(hclust$height, 2)
x <- as.numeric(hclust$merge)
y <- y[which(x < 0)]
x <- x[which(x < 0)]
x <- abs(x)
y <- y[order(x)]
x <- x[order(x)]
plot(hclust, labels = FALSE, hang = hang, ...)
text(x = x, y = y[hclust$order] - (max(hclust$height) * hang), labels = lab[hclust$order], col = lab.col[hclust$order], srt = 90, adj = c(1, 0.5), xpd = NA, ...)
}
myplclust(hClustering, lab = rep(1:2, each = 4), lab.col = rep(1:2, each = 4))
myplclust(hClustering, lab = rep(1:2, each = c(4:8)), lab.col = rep(1:2, each = 4))
myplclust(hClustering, lab = rep(1:2, each = 8), lab.col = rep(1:2, each = 4))
myplclust(hClustering, lab = rep(1:2, each = 8), lab.col = rep(1:2, each = 8))
myplclust(hClustering, lab = rep(1:2, each = 4), lab.col = rep(1:2, each = 4))
myplclust(hClustering, lab = rep(1:2:2, each = 4), lab.col = rep(1:2, each = 4))
?rep
hClustering$height
plot(hClustering)
View(hClustering$height)
myplclust(hClustering, lab = rep(1:3, each = 4), lab.col = rep(1:3, each = 4))
names(hClustering)
nClustering(merge())
nClustering(merge)
hClustering(merge)
hClustering$merge
plot(hClustering)
hClustering$order
myplclust(hClustering, lab = hClustering$labels, lab.col = rep(1:3, length(hClustering$labels))
)
library()
library(swirl)
swirl()
dim(ssd)
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject == 1)
dim(sub1)
names(sub())
names(sub1)
names(sub1[1:12])
myedit("showXY.R")
showMe(1:6)
mdist <- dist(sub1[,1:3])
hClustering(mdist)
hClust(mdist)
hclust(mdist)
hClustering <- hclust(mdist)
hclustering <- hclust(mdist)
mypclust(hclustering, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- scale(sub1[,-c(562,563)]
)
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd$v[,2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(c(10:12, maxCon))
mdist <- dist(sub1[c(10:12, maxCon)])
mdist <- dist(sub1[,c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeasn(sub1[,-c(562,563], centers = 6)
kClust <- kmeasn(sub1[,-c(562,563)], centers = 6)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6)
table(kCluster$cluster, sub1$activity)
table(kClust$cluster, sub1$activity)
table(kCluster$cluster, sub1$activity, nstart = 100)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust$centers)
laying <- which(kClust$size == 29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kCLust$size == 49)
walkdown <- which(kClust$size == 49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "walkdown Cluster")
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
getwd()
setwd("~/Coursera_tom/Reproducible Research/Week 2/RepData_PeerAssessment1")
load("~/Coursera_tom/Reproducible Research/Week 2/RepData_PeerAssessment1/.RData")
save.image("~/Coursera_tom/Reproducible Research/Week 2/RepData_PeerAssessment1/.RData")
unzip("activity.zip")
dat <- read.csv("./activity.csv", header = TRUE, sep = ",")
dat$date <- as.Date(as.character(dat$date), "%Y-%m-%d")
library(dplyr)
d1 <- summarise(group_by(dat, date), sum = sum(steps, na.rm = TRUE))
hist(d1$sum, breaks = 10, col = "Tomato", ylab = "Frequency/(number of intervals)", xlab = "Sum of steps/(per day)", main = "Histogram of Total steps taken within 5 min period of day")
d1mean <- round(mean(d1$sum),0)
d1median <- median(d1$sum)
abline(v = d1mean, lwd = 2, lty = 2)
abline(v = d1median, lwd = 2, lty = 3)
d2 <- summarise(group_by(dat, interval), mean = mean(steps, na.rm = TRUE))
with(d2, plot(interval, mean, type = "l"))
answer <- d2[which.max(d2$mean),][,1]
abline(v = answer, col = "Tomato")
summary(dat)
nasum <- sum(is.na(dat$steps))
naper <- mean(is.na(dat$steps))
d3 <- dat %>% group_by(interval) %>% mutate(intavg = mean(steps, na.rm = TRUE))
for (i in 1:nrow(d3)){
if (is.na(d3[i,1])==TRUE){
d3[i,1] <- d3[i,4]}
else{
d3[i,2] <- d3[i,2]}
}
d4 <- summarise(group_by(d3, date), sum = sum(steps, na.rm = TRUE))
hist(d4$sum, breaks = 10, col = "Tomato", ylab = "Frequency/(number of intervals)", xlab = "Sum of steps/(per day)", main = "Histogram of Total steps taken within 5 min period of day")
d4mean <- round(mean(d4$sum),0)
d4median <- round(median(d4$sum),0)
abline(v = d4mean, lwd = 2, lty = 2)
abline(v = d4median, lwd = 2, lty = 3)
View(d3)
wkday <- d3 %>% filter(intavg == "Weekdays") %>% group_by(interval) %>% summarise(mean = mean(steps, na.rm = TRUE))
wkday
wkday <- d3 %>% subset(intavg == "Weekdays") %>% group_by(interval) %>% summarise(mean = mean(steps, na.rm = TRUE))
View(d3)
d3$type <- as.factor(weekdays(d3$date))
levels(d3$type) <- list(Weekdays = c("Monday","Tuesday", "Wednesday", "Thursday", "Friday"), Weekends = c("Saturday","Sunday"))
View(d3)
wkday <- d3 %>% subset(intavg == "Weekdays") %>% group_by(interval) %>% summarise(mean = mean(steps, na.rm = TRUE))
wkday <- d3 %>% subset(type == "Weekdays") %>% group_by(interval) %>% summarise(mean = mean(steps, na.rm = TRUE))
wkend <- d3 %>% subset(type == "Weekends") %>% group_by(interval) %>% summarise(mean = mean(steps, na.rm = TRUE))
par(mfcol = c(2,1), mar = c(5,5,3,1))
with(wkday, plot(interval, mean, type = "l"))
with(wkend, plot(interval, mean, type = "l"))
answer
xyplot(interval~mean | as.factor(type), data = d3, layout = c(2,1))
library(lattice)
xyplot(interval~mean | as.factor(type), data = d3, layout = c(2,1))
xyplot(interval~mean | type, data = d3, layout = c(2,1))
par(mfcol = c(2,1), mar = c(5,5,3,1))
with(wkday, plot(interval, mean, type = "l"))
with(wkend, plot(interval, mean, type = "l"))
mtext("Ozone and Weather in New York City", outer = TRUE)
par(mfcol = c(2,1), mar = c(5,5,5,1))
with(wkday, plot(interval, mean, type = "l"))
with(wkend, plot(interval, mean, type = "l"))
mtext("Ozone and Weather in New York City", outer = TRUE)
par(mfcol = c(2,1), mar = c(5,5,5,1))
with(wkday, plot(interval, mean, type = "l", main = "Mean steps during weekdays"))
with(wkend, plot(interval, mean, type = "l", main = "Mean steps during weekends"))
par(mfcol = c(2,1), mar = c(5,5,5,1))
with(wkday, plot(interval, mean, type = "l", col = "Tomato", main = "Mean steps during weekdays"))
with(wkend, plot(interval, mean, type = "l", col = "Tomato", main = "Mean steps during weekends"))
par(mfcol = c(2,1), mar = c(5,5,4,1))
with(wkday, plot(interval, mean, type = "l", col = "Tomato", main = "Mean steps during weekdays"))
with(wkend, plot(interval, mean, type = "l", col = "Tomato", main = "Mean steps during weekends"))
mtext("Ozone and Weather in New York City", outer = TRUE)
?plot
max(wkday$mean)
max(wkend$mean)
max(wkend$mean, wkday$mean)
par(mfcol = c(2,1), mar = c(5,5,4,1))
with(wkday, plot(interval, mean, type = "l", col = "Tomato", ylim = max(wkday$mean, wkend$mean), main = "Mean steps during weekdays"))
with(wkend, plot(interval, mean, type = "l", col = "Tomato", ylim = max(wkday$mean, wkend$mean), main = "Mean steps during weekends"))
wkdaymax <- max(wkday$mean)
wkendmax <- max(wkend$mean)
wkdaymax <- round(max(wkday$mean))
wkendmax <- round(max(wkend$mean))
wkdaymax <- round(max(wkday$mean)) + 10
wkendmax <- round(max(wkend$mean)) + 10
par(mfcol = c(2,1), mar = c(5,5,4,1))
with(wkday, plot(interval, mean, type = "l", col = "Tomato", ylim = wkdaymax, main = "Mean steps during weekdays"))
with(wkend, plot(interval, mean, type = "l", col = "Tomato", ylim = wkdaymax, main = "Mean steps during weekends"))
par(mfcol = c(2,1), mar = c(5,5,4,1))
with(wkday, plot(interval, mean, type = "l", col = "Tomato", ylim = "wkdaymax", main = "Mean steps during weekdays"))
with(wkend, plot(interval, mean, type = "l", col = "Tomato", ylim = "wkdaymax", main = "Mean steps during weekends")
)
par(mfcol = c(2,1), mar = c(5,5,4,1))
with(wkday, plot(interval, mean, type = "l", col = "Tomato", ylim = c(0:wkdaymax), main = "Mean steps during weekdays"))
with(wkend, plot(interval, mean, type = "l", col = "Tomato", ylim = c(0:wkdaymax), main = "Mean steps during weekends"))
wkdaymax <- round(max(wkday$mean))
wkendmax <- round(max(wkend$mean))
par(mfcol = c(2,1), mar = c(5,5,4,1))
with(wkday, plot(interval, mean, ylim = c(0, 230), type = "l", col = "Tomato", main = "Mean steps during weekdays"))
with(wkend, plot(interval, mean, ylim = c(0, 230), type = "l", col = "Tomato", main = "Mean steps during weekends"))
ymax <- round(max(wkday$mean, wkend$mean))
par(mfcol = c(2,1), mar = c(5,5,4,1))
with(wkday, plot(interval, mean, ylim = c(0, ymax), type = "l", col = "Tomato", main = "Mean steps during weekdays"))
with(wkend, plot(interval, mean, ylim = c(0, ymax), type = "l", col = "Tomato", main = "Mean steps during weekends"))
par(mfcol = c(2,1), mar = c(5,5,4,1))
with(wkday, plot(interval, mean, ylim = c(0, ymax), type = "l", col = "Tomato", main = "Mean steps during weekdays"))
axis(side = 2, at = seq(0,ymax, 10), lwd = 3)
with(wkend, plot(interval, mean, ylim = c(0, ymax), type = "l", col = "Tomato", main = "Mean steps during weekends"))
par(mfcol = c(2,1), mar = c(5,5,4,1))
with(wkday, plot(interval, mean, ylim = c(0, ymax), type = "l", col = "Tomato", main = "Mean steps during weekdays"))
axis(side = 2, at = seq(0,ymax, 100), lwd = 3)
with(wkend, plot(interval, mean, ylim = c(0, ymax), type = "l", col = "Tomato", main = "Mean steps during weekends"))
par(mfcol = c(2,1), mar = c(5,5,4,1))
with(wkday, plot(interval, mean, ylim = c(0, ymax), type = "l", col = "Tomato", main = "Mean steps during weekdays"))
axis(side = 2, at = seq(0,ymax, 50), lwd = 3)
with(wkend, plot(interval, mean, ylim = c(0, ymax), type = "l", col = "Tomato", main = "Mean steps during weekends"))
par(mfcol = c(2,1), mar = c(5,5,4,1))
with(wkday, plot(interval, mean, ylim = c(0, ymax), type = "l", col = "Tomato", main = "Mean steps during weekdays"))
axis(side = 2, at = seq(0,ymax, 50), lwd = 1)
with(wkend, plot(interval, mean, ylim = c(0, ymax), type = "l", col = "Tomato", main = "Mean steps during weekends"))
with(wkday, plot(interval, mean, ylim = c(0, ymax), type = "l", col = "Tomato", main = "Mean steps during weekdays"))
axis(side = 2, at = seq(0, ymax, 50), lwd = 1)
with(wkday, plot(interval, mean, ylim = c(0, ymax), type = "l", col = "Tomato", main = "Mean steps during weekdays"))
axis(side = 2, at = seq(0, ymax, 25), lwd = 1)
axis(side = 2, at = seq(0, 300, 50), lwd = 1)
par(mfcol = c(2,1), mar = c(5,5,4,1))
with(wkday, plot(interval, mean, ylim = c(0, ymax), type = "l", col = "Tomato", main = "Mean steps during weekdays"))
axis(side = 2, at = seq(0, 300, 50), lwd = 1)
axis(side = 2, at = seq(0, ymax, 3), lwd = 1)
Tot <- rbind(wkday, wkend)
library(lattice)
xyplot(mean~interval, data = Tot, pch = 8, col = "red", main = "Big Apple Data")
xyplot(mean~interval | type, data = Tot, pch = 8, col = "red", layout = c(2,1), main = "Big Apple Data")
wkday <- d3 %>% subset(type == "Weekdays") %>% group_by(interval) %>% summarise(mean = mean(steps, na.rm = TRUE)) %>% mutate(as.factor(type = "Weekday"))
wkend <- d3 %>% subset(type == "Weekends") %>% group_by(interval) %>% summarise(mean = mean(steps, na.rm = TRUE)) %>% mutate(as.factor(type = "Weekend"))
wkday <- d3 %>% subset(type == "Weekdays") %>% group_by(interval) %>% summarise(mean = mean(steps, na.rm = TRUE)) %>% mutate(type = "Weekday")
wkend <- d3 %>% subset(type == "Weekends") %>% group_by(interval) %>% summarise(mean = mean(steps, na.rm = TRUE)) %>% mutate(type = "Weekend")
Tot <- rbind(wkday, wkend)
library(lattice)
xyplot(mean~interval | type, data = Tot, pch = 8, col = "red", layout = c(2,1), main = "Big Apple Data")
xyplot(mean~interval | type, data = Tot, pch = 8, col = "red", layout = c(1,2), main = "Mean number of steps by interval")
xyplot(mean~interval | type, data = Tot, type = "b", pch = 8, col = "red", layout = c(1,2), main = "Mean number of steps by interval")
xyplot(mean~interval | type, data = Tot, type = "b", pch = 1, col = "red", layout = c(1,2), main = "Mean number of steps by interval")
xyplot(mean~interval | type, data = Tot, type = "b", pch = 1, col = "red", layout = c(1,2), xlab = "Interval of day", ylab = "Mean number of steps", main = "Mean number of steps by interval")
xyplot(mean~interval | type, data = Tot, type = "l", pch = 1, col = "red", layout = c(1,2), xlab = "Interval of day", ylab = "Mean number of steps", main = "Mean number of steps by interval")
